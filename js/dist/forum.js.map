{"version":3,"sources":["webpack://@block-cat/digi-media-manager/webpack/bootstrap","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/app']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['app']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/Button']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/Component']\"","webpack://@block-cat/digi-media-manager/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@block-cat/digi-media-manager/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['components/Button']\"","webpack://@block-cat/digi-media-manager/external \"flarum.extensions['fof-upload']\"","webpack://@block-cat/digi-media-manager/./src/forum/components/UploadButton.js","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/utils/classList']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/extend']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/Alert']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@block-cat/digi-media-manager/./src/forum/components/DropZone.js","webpack://@block-cat/digi-media-manager/./src/forum/utils/mimeToIcon.js","webpack://@block-cat/digi-media-manager/./src/forum/components/UserFileList.js","webpack://@block-cat/digi-media-manager/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","extensions","UploadButton","oninit","vnode","this","attrs","uploader","on","$","reset","redraw","isMediaUploadButton","oncreate","tooltip","view","buttonText","uploading","app","translator","trans","className","classList","icon","onclick","uploadButtonClicked","title","disabled","size","type","multiple","onchange","process","e","files","prop","length","upload","click","Component","DropZone","uploaded","enable","loading","content","text_original","Stream","text_transliterat","contor","selectedFiles","fileListState","map","file","includes","id","src","UserFileList","component","user","selectable","onFileSelect","restrictFileType","Button","transliterate","class","bidi","oncha","addFilesAndText","transChoice","isLoading","params","user_id","session","maxFileSize","url","eval","alert","request","method","forum","attribute","then","data","error","modal","close","k","fileId","store","getById","composer","editor","insertAtCursor","bbcode","attributes","path","image","archive","code","word","setUser","inModal","downloadOnClick","filesBeingHidden","showFiles","state","aria-live","empty","screen","fileType","fileIcon","indexOf","fileSelectable","isSelectable","fileClassNames","fileName","baseName","isFileHiding","uuid","aria-busy","deleteOthersMediaLibrary","aria-label","hideFile","onFileClick","extractText","draggable","alt","role","window","open","Array","isArray","push","confirm","body","alerts","show","Alert","index","findIndex","splice","initializers","add","extend","require","components","FileManagerModal","userFileListVisibility","override","original","alertAttrs","onSelect","showAllFiles","hide","multiSelect"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,e,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAY,K,cCAzCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,6BCArB,SAASC,EAAgB1B,EAAGqB,GAMzC,OALAK,EAAkBzB,OAAO0B,gBAAkB,SAAyB3B,EAAGqB,GAErE,OADArB,EAAE4B,UAAYP,EACPrB,IAGcA,EAAGqB,GCLb,SAASQ,EAAeC,EAAUC,GAC/CD,EAASX,UAAYlB,OAAOY,OAAOkB,EAAWZ,WAC9CW,EAASX,UAAUa,YAAcF,EACjC,EAAeA,EAAUC,G,iDCJ3BzC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOU,WAAW,e,0JCMdC,E,0GACjBC,OAAA,SAAOC,GAAO,WACV,YAAMD,OAAN,UAAaC,GAEbC,KAAKC,MAAMC,SAASC,GAAG,YAAY,WAE/B,EAAKC,EAAE,QAAQ,GAAGC,QAGlB/C,EAAEgD,YAGNN,KAAKO,oBAAsBR,EAAME,MAAMM,sBAAuB,G,EAGlEC,SAAA,SAAST,GACL,YAAMS,SAAN,UAAeT,GAGVC,KAAKO,qBACNP,KAAKI,IAAIK,W,EAIjBC,KAAA,WACI,IAAMC,EAAaX,KAAKC,MAAMC,SAASU,UACjCC,IAAIC,WAAWC,MAAM,mCACrBF,IAAIC,WAAWC,MAAM,mCAmBrBN,GAAYT,KAAKO,qBAAuBI,GAAe,IAE7D,OACI,EAAC,IAAD,CACIK,UAAWC,IAAU,CACjB,SACA,UACA,qBACCjB,KAAKO,sBAAwBP,KAAKC,MAAMC,SAASU,WAAa,gBAC9DZ,KAAKO,sBAAwBP,KAAKC,MAAMC,SAASU,WAAa,eAC/DZ,KAAKC,MAAMC,SAASU,WAAa,cAErCM,MAAOlB,KAAKC,MAAMC,SAASU,WAAa,qBACxCO,QAASnB,KAAKoB,oBAAoB1C,KAAKsB,MACvCqB,MAAOZ,EACPa,SAAUtB,KAAKC,MAAMqB,UAEpBtB,KAAKC,MAAMC,SAASU,WAAa,EAAC,IAAD,CAAkBW,KAAK,OAAOP,UAAU,0CACxEhB,KAAKO,qBAAuBP,KAAKC,MAAMC,SAASU,YAAc,UAAMI,UAAU,gBAAgBL,GAChG,cACI,WAAOa,KAAK,OAAOC,UAAU,EAAMC,SAAU1B,KAAK2B,QAAQjD,KAAKsB,W,EAW/E2B,QAAA,SAAQC,GAEJ,IAAMC,EAAQ7B,KAAKI,EAAE,SAAS0B,KAAK,SAEd,IAAjBD,EAAME,QAOV/B,KAAKC,MAAMC,SAAS8B,OAAOH,GAAQ7B,KAAKO,sB,EAQ5Ca,oBAAA,SAAoBQ,GAGhB5B,KAAKI,EAAE,SAAS6B,S,GAnGkBC,M,cCN1CjF,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,8tCCOf+C,S,wOACjBrC,OAAA,SAAOC,GACH,qBAAMD,OAAN,UAAaC,GAEbC,KAAKoC,UAAW,EAChBpC,KAAKqC,QAAS,EACdrC,KAAKsC,SAAU,EACftC,KAAKuC,QAAU,GACfvC,KAAK6B,MAAQ,GACb7B,KAAKwC,cAAgBC,oEAASzC,KAAKC,MAAMuC,eACzCxC,KAAK0C,kBAAoBD,oEAASzC,KAAKC,MAAMyC,mBAC7C1C,KAAK6B,MAAQ,GAEb7B,KAAK2C,OAAS,G,OAGlBjC,KAAA,WAAO,WAqBH,OApBuC,GAAnCV,KAAKC,MAAM2C,cAAcb,OACzB/B,KAAKoC,UAAW,EAEhBpC,KAAKoC,UAAW,EAGpBvB,yDAAIgC,cAAchB,MAAMiB,KAAI,SAACC,GACpB,EAAK9C,MAAM2C,cAAcI,SAASD,EAAKE,SAExCF,EAAKvB,OAAOwB,SAAS,WAA6B,oBAAhBD,EAAKvB,SACvC,EAAKmB,SAGU,GAAf,EAAKA,OACL,EAAKN,QAAS,EAEd,EAAKA,QAAS,MAKlB,aAEQrC,KAAKsC,SAED,SAAKtB,UAAU,eACX,QAAIA,UAAU,gBAAgBH,yDAAIC,WAAWC,MAAM,mDACnD,SAAKmC,IAAI,+FAIrB,SAAKlC,UAAU,cAEPhB,KAAKoC,UACJe,6CAAaC,UAAU,CACpBC,KAAMrD,KAAKC,MAAMoD,KACjBC,YAAY,EACZC,aAAcvD,KAAKC,MAAMsD,aAAa7E,KAAKsB,MAC3C4C,cAAe5C,KAAKC,MAAM2C,cAC1BY,iBAAkBxD,KAAKC,MAAMuD,mBAIjCxD,KAAKoC,UACD,SAAKpB,UAAU,wBAEQ,IAAdhB,KAAK6B,MACF4B,uEAAOL,UAAU,CACbpC,UAAW,8CACXG,QAASnB,KAAK0D,cAAchF,KAAKsB,MACjCsB,UAAWtB,KAAKqC,OAChBC,QAAStC,KAAKsC,SAEdzB,yDAAIC,WAAWC,MAAM,2DACrB,GAGXf,KAAK6B,OACF,SAAKb,UAAU,qBACX,QAAI2C,OAAA,GAAO9C,yDAAIC,WAAWC,MAAM,4DAChC,SAAKC,UAAU,cACX,aACI,WAAOA,UAAU,YACb,WAAOQ,KAAK,WAAWoC,KAAM5D,KAAKwC,cAAeqB,OAAK,EAACvC,SAAUtB,KAAKsC,UACrEzB,yDAAIC,WAAWC,MAAM,6DAE1B,WAAOC,UAAU,YACb,WAAOQ,KAAK,WAAWoC,KAAM5D,KAAK0C,kBAAmBpB,SAAUtB,KAAKsC,UACnEzB,yDAAIC,WAAWC,MAAM,oEAQzB,KAAff,KAAK6B,MACH4B,uEAAOL,UAAU,CACbpC,UAAW,8CACXG,QAASnB,KAAK8D,gBAAgBpF,KAAKsB,OAEnCa,yDAAIC,WAAWiD,YAAY,2DAA4D/D,KAAKC,MAAM2C,cAAcb,SAChH,MAQtB/B,KAAKoC,UACF,SAAKpB,UAAU,YACZ,SAAK2C,MAAM,kBACP,OAAGA,MAAM,4BACT,OAAGA,MAAM,0BACT,OAAGA,MAAM,2BAEb,YAAK9C,yDAAIC,WAAWC,MAAM,4CAC1B,WAAIF,yDAAIC,WAAWC,MAAM,+CACzB,SAAKC,UAAU,qCACrB,EAAC,6CAAD,CAAcd,SAAUF,KAAKE,SAAUoB,SAAUT,yDAAIgC,cAAcmB,YAAazD,qBAAmB,Q,OAOjHmD,cAAA,SAAAA,gBAAgB,gBACZ1D,KAAKsC,SAAU,EACftC,KAAK6B,MAAQ,GACb,IAAIoC,OAAS,CAAEC,QAASrD,yDAAIsD,QAAQd,KAAKJ,MACrCmB,YAAc,EAelB,GAbAvD,yDAAIgC,cAAchB,MAAMiB,KAAI,SAACC,MACpB,OAAK9C,MAAM2C,cAAcI,SAASD,KAAKE,QAExCF,KAAKsB,MAAMrB,SAAS,WAEpBD,KAAKvB,OAAOwB,SAAS,WAA6B,oBAAhBD,KAAKvB,UACvC8C,KAAK,aAAavB,KAAKE,KAAnB,MAA6BF,KAAKE,MAClCF,KAAKxB,OAAS6C,cACdA,YAAcrB,KAAKxB,aAKX,IAAhB6C,YAIA,OAHAG,MAAM,uDACNvE,KAAKsC,SAAU,OACfhF,EAAEgD,SAINN,KAAKwE,QAAQP,S,OAqCjBO,QAAA,SAAQP,GAAQ,WACZ,OAAOpD,yDACF2D,QAAQ,CACLC,OAAQ,MACRJ,IAAKxD,yDAAI6D,MAAMC,UAAU,UAAY,eACrCV,OAAQA,IAEXW,MAAK,SAACC,GACH,EAAKhD,MAAQgD,EAAKA,KAClB,EAAKvC,SAAU,EACfhF,EAAEgD,YATH,OAWI,SAACwE,GAGJ,MAFA,EAAKxC,SAAU,EACfhF,EAAEgD,SACIwE,M,OAIlBhB,gBAAA,WAAkB,WACdjD,yDAAIkE,MAAMC,QAEV,IAAMxC,EAAgBxC,KAAKwC,gBACrBE,EAAoB1C,KAAK0C,oBAE3BuC,EAAI,EACRjF,KAAKC,MAAM2C,cAAcE,KAAI,SAACoC,GAC1B,IAAMnC,EAAOlC,yDAAIsE,MAAMC,QAAQ,QAASF,GAExC,IACQnC,EAAKE,OAAS,EAAKpB,MAAMoD,GAAGhC,KAC5BpC,yDAAIwE,SAASC,OAAOC,eAAexC,EAAKyC,SAAW,QAC1B,GAArB9C,GACA7B,yDAAIwE,SAASC,OAAOC,eAAe,mBAAqB,EAAK1D,MAAMoD,GAAGQ,WAAWpB,IAAM,yBAEtE,GAAjB7B,GACA3B,yDAAIwE,SAASC,OAAOC,eAAe,eAAiB,EAAK1D,MAAMoD,GAAGQ,WAAWC,KAAO,qBAExFT,KAEN,MAAOH,GACLG,IACApE,yDAAIwE,SAASC,OAAOC,eAAexC,EAAKyC,SAAW,a,UArO7BtD,iE,4KCPhCyD,EAAQ,CAAC,YAAa,YAAa,aAAc,gBAAiB,aAClEC,EAAU,CAAC,kBAAmB,8BAA+B,mBAAoB,sBAAuB,gCACxGC,EAAO,CAAC,YAAa,WAAY,kBAAmB,mBAAoB,sBAAuB,kBAAmB,2BAClHC,EAAO,CACT,wBACA,qBACA,0EACA,mB,ICIiB3C,E,0GACjBrD,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAGbc,IAAIgC,cAAckD,QAAQhG,EAAME,MAAMoD,MAAQxC,IAAIsD,QAAQd,MAE1DrD,KAAKgG,QAAUjG,EAAME,MAAMqD,WAC3BtD,KAAKwD,iBAAmBzD,EAAME,MAAMuD,kBAAoB,KACxDxD,KAAKiG,gBAAkBjG,KAAKC,MAAMgG,kBAAmB,EAIrDjG,KAAKkG,iBAAmB,GAKxBlG,KAAKqD,KAAOxC,IAAIgC,cAAcQ,KAG9BrD,KAAKmG,UAAYnG,KAAKC,MAAM2C,e,EAGhClC,KAAA,WAAO,WAIG0F,EAAQvF,IAAIgC,cAElB,OACI,SAAK7B,UAAU,uBAAuBqF,YAAU,UAE3CD,EAAMpC,aAAsC,IAAvBoC,EAAMvE,MAAME,QAC9B,SAAKf,UAAW,sBACXH,IAAIC,WAAWC,MAAM,sCAEtB,EAAC,IAAD,OAKPf,KAAKgG,SAAWI,EAAME,SACnB,OAAGtF,UAAU,oBACT,OAAGA,UAAU,kDAEZH,IAAIC,WAAWC,MAAf,2CAAgF,UAAjBF,IAAI0F,SAAuB,UAAY,YAK7GvG,KAAKgG,SAAWI,EAAME,SAAW,OAAGtF,UAAU,oBAAoBH,IAAIC,WAAWC,MAAM,qCAGzF,YACKqF,EAAMvE,MAAMiB,KAAI,SAACC,GACd,GAAK,EAAKoD,UAAUnD,SAASD,EAAKE,MAAlC,CAEA,IDnDWuD,ECmDLC,GDnDKD,ECmDiBzD,EAAKvB,ODjDjDmE,EAAM3C,SAASwD,GACR,QAGFA,EAASxD,SAAS,UAChB,oBAGFwD,EAASxD,SAAS,UAChB,oBAGF4C,EAAQc,QAAQF,IAAa,EAC3B,sBAGW,oBAAbA,EACE,kBAGFV,EAAKY,QAAQF,IAAa,EACxB,mBAGFA,EAASxD,SAAS,UAChB,oBAGF6C,EAAKa,QAAQF,IAAa,EACxB,mBAGJ,eCkBmBG,GAAiB,EAAKnD,kBAAmB,EAAKoD,aAAa7D,GAE3D8D,EAAiB5F,IAAU,CAC7B,WAEa,UAAbwF,GAAwB,sBAExB,EAAKxG,MAAM2C,eAAiB,EAAK3C,MAAM2C,cAAc8D,QAAQ3D,EAAKE,OAAS,GAAK,sBAO9E6D,EAAW/D,EAAKgE,WAEhBC,EAAe,EAAKd,iBAAiBlD,SAASD,EAAKkE,QAEzD,OACI,QAAIC,YAAWF,GACVnG,IAAIsD,QAAQd,OAAS,EAAKA,OAASxC,IAAIsD,QAAQd,MAAQxC,IAAIsD,QAAQd,KAAK8D,6BACrE,EAAC,IAAD,CACInG,UAAU,sCACVE,KAAK,mBACLkG,aAAYvG,IAAIC,WAAWC,MAAM,oDAAqD,CAAE+F,aACxFxF,SAAU0F,EACV7F,QAAS,EAAKkG,SAAS3I,KAAK,EAAMqE,KAI1C,YACI/B,UAAW6F,EACX1F,QAAS,kBAAM,EAAKmG,YAAYvE,IAChCzB,UAAWqF,GAAkBK,EAC7BI,aAAYG,IAAY1G,IAAIC,WAAWC,MAAM,oDAAqD,CAAE+F,eAEpG,gBACkB,UAAbL,EACG,SACIvD,IAAKH,EAAKsB,MACVrD,UAAU,yBACVwG,WAAW,EAOXC,IAAI,KAGR,UACIzG,UAAU,gBAOV0G,KAAK,gBAEL,OAAG1G,UAAS,SAAWyF,KAI/B,gBAAYzF,UAAU,iBAAiB8F,GAEtCE,GACG,UACIrD,MAAM,mBACN+D,KAAK,SACLN,aAAYvG,IAAIC,WAAWC,MAAM,iDAEjC,EAAC,IAAD,iB,EAgC5CuG,YAAA,SAAYvE,GAEJ/C,KAAKC,MAAMsD,aACXvD,KAAKC,MAAMsD,aAAaR,GAKxB/C,KAAKC,MAAMgG,iBACX0B,OAAOC,KAAK7E,EAAKsB,Q,EAUzBuC,aAAA,SAAa7D,GACT,IAAMyD,EAAWzD,EAAKvB,OAGtB,OAAIqG,MAAMC,QAAQ9H,KAAKwD,kBACZxD,KAAKwD,iBAAiBkD,QAAQF,IAAa,EAInB,UAA1BxG,KAAKwD,iBACHgD,EAASxD,SAAS,UAIM,UAA1BhD,KAAKwD,iBACHgD,EAASxD,SAAS,UAIM,UAA1BhD,KAAKwD,kBACHgD,EAASxD,SAAS,W,EAcjCqE,SAAA,SAAStE,GAAM,WAILkE,EAAOlE,EAAKkE,OAElB,IAAIjH,KAAKkG,iBAAiBlD,SAASiE,GAQnC,GANAjH,KAAKkG,iBAAiB6B,KAAKd,GAEPe,QAChBT,IAAY1G,IAAIC,WAAWC,MAAM,yDAA0D,CAAE+F,SAAU/D,EAAKgE,eAI5GlG,IAAI2D,QAAQ,CACRC,OAAQ,QACRJ,IAAQxD,IAAI6D,MAAMC,UAAU,UAAzB,mBACHsD,KAAM,CAAEhB,UAEPrC,MAAK,WACF/D,IAAIqH,OAAOC,KAAKC,IAAO,CAAE5G,KAAM,WAAaX,IAAIC,WAAWC,MAAM,yDANzE,OAQW,WACHF,IAAIqH,OAAOC,KACPC,IACA,CAAE5G,KAAM,SACRX,IAAIC,WAAWC,MAAM,iDAAkD,CAAE+F,SAAU/D,EAAK+D,iBAG/FlC,MAAK,WAKF,IAAMwB,EAAQvF,IAAIgC,cAEZwF,EAAQjC,EAAMvE,MAAMyG,WAAU,SAACvF,GAAD,OAAUkE,IAASlE,EAAKkE,UAC5Db,EAAMvE,MAAM0G,OAAOF,EAAO,GAG1B,IAAMnL,EAAI,EAAKgJ,iBAAiBQ,QAAQO,GACxC,EAAKf,iBAAiBqC,OAAOrL,EAAG,UAErC,CAEH,IAAMA,EAAI8C,KAAKkG,iBAAiBQ,QAAQO,GACxCjH,KAAKkG,iBAAiBqC,OAAOrL,EAAG,K,GAxQFgF,M,gGCL1CrB,IAAI2H,aAAaC,IAAI,gCAAgC,WACnDC,iBAAOC,EAAQ,GAAeC,WAAWC,iBAAiB/J,UAAW,UAAU,WAC7E+B,IAAI6D,MAAMG,KAAKY,WAAWqD,wBAAyB,KAIrDC,mBAASJ,EAAQ,GAAeC,WAAWC,iBAAiB/J,UAAW,QAAQ,SAASkK,GACtF,OACE,SAAKhI,UAAS,sBAAwBhB,KAAKgB,aACvC,SAAKA,UAAU,iBACX,SAAKA,UAAU,qCACX,EAACnB,EAAA,EAAD,CAAcK,SAAUF,KAAKE,SAAUoB,SAAUT,IAAIgC,cAAcmB,YAAazD,qBAAmB,KAGvG,SAAKS,UAAU,qBACX,SAAKA,UAAU,6BACX,OAAGA,UAAU,4BAEZH,IAAIC,WAAWC,MAAM,kDAI9B,SAAKC,UAAU,gBACX,QAAIA,UAAU,2CAA2CH,IAAIC,WAAWC,MAAM,oCAGjFf,KAAKiJ,YACF,SAAKjI,UAAU,eACX,EAACoH,MAAUpI,KAAKiJ,aAIxB,SAAKjI,UAAU,cACXH,IAAI6D,MAAMC,UAAU,0BACtBgE,EAAQ,GAAeC,WAAWzF,aAAaC,UAAU,CACvDC,KAAMrD,KAAKC,MAAMoD,KACjBC,YAAY,EACZC,aAAcvD,KAAKuD,aAAa7E,KAAKsB,MACrC4C,cAAe5C,KAAK4C,cACpBY,iBAAkBxD,KAAKwD,mBAEvBrB,IAASiB,UAAU,CACjBC,KAAMrD,KAAKC,MAAMoD,KACjBE,aAAcvD,KAAKuD,aAAa7E,KAAKsB,MACrC4C,cAAe5C,KAAK4C,cACpBY,iBAAkBxD,KAAKwD,iBACvB0F,SAAUlJ,KAAKkJ,SAASxK,KAAKsB,SAKnC,SAAKgB,UAAU,gBAEVH,IAAI6D,MAAMC,UAAU,0BACrBlB,IAAOL,UAAU,CACfH,GAAI,qBACJ9B,QAASnB,KAAKmJ,aAAazK,KAAKsB,MAChCgB,UAAW,0BAEbH,IAAIC,WAAWC,MAAM,2CAErB0C,IAAOL,UAAU,CACfH,GAAI,iBACJ9B,QAASnB,KAAKmJ,aAAazK,KAAKsB,MAChCgB,UAAW,4BAEbH,IAAIC,WAAWC,MAAM,uCAIvB,EAAC,IAAD,CAAQI,QAASnB,KAAKoJ,KAAK1K,KAAKsB,MAAOgB,UAAU,UAC5CH,IAAIC,WAAWC,MAAM,oCAG1B,EAAC,IAAD,CACII,QAASnB,KAAKkJ,SAASxK,KAAKsB,MAC5BsB,SAAwC,IAA9BtB,KAAK4C,cAAcb,SAAkB/B,KAAKqJ,aAAerJ,KAAK4C,cAAcb,OAAS,EAC/Ff,UAAU,0BAETH,IAAIC,WAAWiD,YAAY,mDAAoD/D,KAAK4C,cAAcb,eAQrH4G,EAAQ,GAAeC,WAAWC,iBAAiB/J,UAAUqK,aAAgB,WAC3EtI,IAAI6D,MAAMG,KAAKY,WAAWqD,yBAA0B","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.extensions['fof-upload'];","import app from 'flarum/common/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport classList from 'flarum/common/utils/classList';\r\n\r\nexport default class UploadButton extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        this.attrs.uploader.on('uploaded', () => {\r\n            // reset the button for a new upload\r\n            this.$('form')[0].reset();\r\n\r\n            // redraw to reflect uploader.loading in the DOM\r\n            m.redraw();\r\n        });\r\n\r\n        this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\r\n    }\r\n\r\n    oncreate(vnode) {\r\n        super.oncreate(vnode);\r\n\r\n        // Add tooltip\r\n        if (!this.isMediaUploadButton) {\r\n            this.$().tooltip();\r\n        }\r\n    }\r\n\r\n    view() {\r\n        const buttonText = this.attrs.uploader.uploading\r\n            ? app.translator.trans('fof-upload.forum.states.loading')\r\n            : app.translator.trans('fof-upload.forum.buttons.upload');\r\n\r\n        /**\r\n         * Flarum core has decided that all buttons should have tooltips, but\r\n         * it uses `extractText` to get a title attr when none is provided.\r\n         *\r\n         * That returns `false` when no text is available, like the icon in a\r\n         * button.\r\n         *\r\n         * This means that it starts creating weird tooltips, such as `falsefalse`\r\n         * and `falseUpload`.\r\n         *\r\n         * To override this behaviour, we pass `\" \"` when no tooltip is desired.\r\n         * Using `\"\"` won't work as JS interprets this as a falsey value which will\r\n         * trigger the core logic.\r\n         *\r\n         * Thankfully, browsers ignore title attributes made of only whitespace,\r\n         * preventing a ghost-like tooltip.\r\n         */\r\n        const tooltip = (!this.isMediaUploadButton && buttonText) || ' ';\r\n\r\n        return (\r\n            <Button\r\n                className={classList([\r\n                    'Button',\r\n                    'hasIcon',\r\n                    'fof-upload-button',\r\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\r\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\r\n                    this.attrs.uploader.uploading && 'uploading',\r\n                ])}\r\n                icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\r\n                onclick={this.uploadButtonClicked.bind(this)}\r\n                title={tooltip}\r\n                disabled={this.attrs.disabled}\r\n            >\r\n                {this.attrs.uploader.uploading && <LoadingIndicator size=\"tiny\" className=\"LoadingIndicator--inline Button-icon\" />}\r\n                {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\r\n                <form>\r\n                    <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\r\n                </form>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Process the upload event.\r\n     *\r\n     * @param e\r\n     */\r\n    process(e) {\r\n        // get the file from the input field\r\n        const files = this.$('input').prop('files');\r\n\r\n        if (files.length === 0) {\r\n            // We've got no files to upload, so trying\r\n            // to begin an upload will show an error\r\n            // to the user.\r\n            return;\r\n        }\r\n\r\n        this.attrs.uploader.upload(files, !this.isMediaUploadButton);\r\n    }\r\n\r\n    /**\r\n     * Event handler for upload button being clicked\r\n     *\r\n     * @param {PointerEvent} e\r\n     */\r\n    uploadButtonClicked(e) {\r\n        // Trigger click on hidden input element\r\n        // (Opens file dialog)\r\n        this.$('input').click();\r\n    }\r\n}","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/common/app';\r\nimport Component from 'flarum/common/Component';\r\nimport UserFileList from './UserFileList';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport UploadButton from './UploadButton';\r\n\r\nexport default class DropZone extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        this.uploaded = false;\r\n        this.enable = false;\r\n        this.loading = false;\r\n        this.content = '';\r\n        this.files = '';\r\n        this.text_original = Stream(!!this.attrs.text_original);\r\n        this.text_transliterat = Stream(!!this.attrs.text_transliterat);\r\n        this.files = '';\r\n\r\n        this.contor = 0;\r\n    }\r\n\r\n    view() {\r\n        if (this.attrs.selectedFiles.length != 0) {\r\n            this.uploaded = true;\r\n        } else {\r\n            this.uploaded = false;\r\n        }\r\n\r\n        app.fileListState.files.map((file) => {\r\n            if (!this.attrs.selectedFiles.includes(file.id())) return;\r\n\r\n            if (file.type().includes('image/') || file.type() === 'application/pdf') {\r\n                this.contor++;\r\n            }\r\n\r\n            if (this.contor != 0) {\r\n                this.enable = true;\r\n            } else {\r\n                this.enable = false;\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div >\r\n                {\r\n                    this.loading &&\r\n                    (\r\n                        <div className=\"div_loading\">\r\n                            <h3 className=\"loading_text\">{app.translator.trans('digi-media-manager.forum.dropzone.loading_text')}</h3>\r\n                            <img src=\"https://digi.emoldova.org/assets/files/2021-04-29/1619697698-204093-cyr-ocr-animation.gif\" />\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className='NoDropZone'>\r\n                    {\r\n                        this.uploaded &&\r\n                        (UserFileList.component({\r\n                            user: this.attrs.user,\r\n                            selectable: true,\r\n                            onFileSelect: this.attrs.onFileSelect.bind(this),\r\n                            selectedFiles: this.attrs.selectedFiles,\r\n                            restrictFileType: this.attrs.restrictFileType\r\n                        }))\r\n                    }\r\n                    {\r\n                        this.uploaded && (\r\n                            <div className='UserFileList-buttons'>\r\n                                {\r\n                                    (this.files == '') ?\r\n                                        Button.component({\r\n                                            className: \"Button Button--primary button_transliterare\",\r\n                                            onclick: this.transliterate.bind(this),\r\n                                            disabled: !this.enable,\r\n                                            loading: this.loading\r\n                                        },\r\n                                            app.translator.trans('digi-media-manager.forum.dropzone.transliterate_button')\r\n                                        ) : ''\r\n                                }\r\n\r\n                                {this.files && (\r\n                                    <div className='UserFileList-text'>\r\n                                        <h3 class>{app.translator.trans('digi-media-manager.forum.dropzone.after_transliteration')}</h3>\r\n                                        <div className=\"Form-group\">\r\n                                            <div>\r\n                                                <label className=\"checkbox\">\r\n                                                    <input type=\"checkbox\" bidi={this.text_original} oncha disabled={this.loading} />\r\n                                                    {app.translator.trans('digi-media-manager.forum.dropzone.checkbox_text_original')}\r\n                                                </label>\r\n                                                <label className=\"checkbox\">\r\n                                                    <input type=\"checkbox\" bidi={this.text_transliterat} disabled={this.loading} />\r\n                                                    {app.translator.trans('digi-media-manager.forum.dropzone.checkbox_text_transliterat')}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )\r\n                                }\r\n                                {(this.files !== '') ?\r\n                                    Button.component({\r\n                                        className: \"Button Button--primary button_transliterare\",\r\n                                        onclick: this.addFilesAndText.bind(this),\r\n                                    },\r\n                                        app.translator.transChoice('digi-media-manager.forum.dropzone.add_to_composer_button', this.attrs.selectedFiles.length)\r\n                                    ) : ''}\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n\r\n\r\n                {!this.uploaded &&\r\n                    (<div className=\"dropzone\">\r\n                        <div class=\"icon-container\">\r\n                            <i class=\"far fa-file-image fa-4x\"></i>\r\n                            <i class=\"far fa-file-pdf fa-4x\"></i>\r\n                            <i class=\"far fa-file-alt fa-4x\"></i>\r\n                        </div>\r\n                        <h1>{app.translator.trans('digi-media-manager.forum.dropzone.title')}</h1>\r\n                        <p>{app.translator.trans('digi-media-manager.forum.dropzone.subtitle')}</p>\r\n                        <div className=\"fof-modal-buttons App-backControl\">\r\n                  <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\r\n                        </div>\r\n                    </div>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    transliterate() {\r\n        this.loading = true;\r\n        this.files = '';\r\n        let params = { user_id: app.session.user.id() };\r\n        let maxFileSize = 0;\r\n\r\n        app.fileListState.files.map((file) => {\r\n            if (!this.attrs.selectedFiles.includes(file.id())) return;\r\n\r\n            if (file.url().includes('imgur')) return;\r\n\r\n            if (file.type().includes('image/') || file.type() === 'application/pdf') {\r\n                eval(`params.id_${file.id()} = ${file.id()}`);\r\n                if (file.size() > maxFileSize) {\r\n                    maxFileSize = file.size();\r\n                }\r\n            }\r\n        });\r\n\r\n        if (maxFileSize === 0) {\r\n            alert('Unul sau mai multe fișiere nu corespund cerințelor!');\r\n            this.loading = false;\r\n            m.redraw();\r\n            return;\r\n        }\r\n\r\n        this.request(params);\r\n\r\n        // Modified 25.06.2021 timpul de asteptare eliminat\r\n        // if (maxFileSize < 5242880) { // less than 5 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 55); // 20 sec. -> 55 sec. 16.06.2021\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 5242880 && maxFileSize < 10485760) { // between 5 MB and 10 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 90); // 90 sec. / 1.5 minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 10485760 && maxFileSize < 15728640) { // between 10 MB and 15 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 150); // 150 sec. / 2.5 minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 15728640 && maxFileSize < 20971520) { // between 15 MB and 20 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 300); // 300 sec. / 5 minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 20971520 && maxFileSize < 26214400) { // between 20 MB and 25 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 400); // 400 sec. / 6,(6) minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 26214400 && maxFileSize < 52428800) { // between 20 MB and 50 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 500); // 500 sec. / 8,(3) minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 52428800 && maxFileSize < 104857600) { // between 50 MB and 100 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 600); // 600 sec. / 10 minutes\r\n        //     return;\r\n        // }\r\n        // if (maxFileSize >= 104857600 && maxFileSize < 262144000) { // between 100 MB and 250 MB\r\n        //     setTimeout(() => { this.request(params) }, 1000 * 60 * 20); // 20 minutes\r\n        //     return;\r\n        // }\r\n    }\r\n    \r\n    request(params) {\r\n        return app\r\n            .request({\r\n                method: 'GET',\r\n                url: app.forum.attribute('apiUrl') + '/trans-texts',\r\n                params: params,\r\n            })\r\n            .then((data) => {\r\n                this.files = data.data;\r\n                this.loading = false;\r\n                m.redraw();\r\n            })\r\n            .catch((error) => {\r\n                this.loading = false;\r\n                m.redraw();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    addFilesAndText() {\r\n        app.modal.close();\r\n\r\n        const text_original = this.text_original();\r\n        const text_transliterat = this.text_transliterat();\r\n\r\n        let k = 0;\r\n        this.attrs.selectedFiles.map((fileId) => {\r\n            const file = app.store.getById('files', fileId);\r\n\r\n            try {\r\n                if (file.id() === this.files[k].id) {\r\n                    app.composer.editor.insertAtCursor(file.bbcode() + '\\n\\n');\r\n                    if (text_transliterat == true) {\r\n                        app.composer.editor.insertAtCursor('[transliterat]\\n' + this.files[k].attributes.url + '\\n[/transliterat]\\n\\n');\r\n                    }\r\n                    if (text_original == true) {\r\n                        app.composer.editor.insertAtCursor('[chirilic]\\n' + this.files[k].attributes.path + '\\n[/chirilic]\\n\\n');\r\n                    }\r\n                    k++;\r\n                }\r\n            } catch (error) {\r\n                k++;\r\n                app.composer.editor.insertAtCursor(file.bbcode() + '\\n\\n');\r\n            }\r\n        });\r\n    }\r\n}","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\r\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\r\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\r\nconst word = [\r\n    'application/x-abiword',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/pdf',\r\n];\r\n\r\n/**\r\n * Returns a FontAwesome icon class for a specified MIME type.\r\n *\r\n * If it's a known image type, it returns `image` instead.\r\n *\r\n * @param {string} fileType MIME type\r\n * @returns {string} Icon for MIME type\r\n */\r\nexport default function mimeToIcon(fileType) {\r\n    // Display image (do not display for)\r\n    if (image.includes(fileType)) {\r\n        return 'image';\r\n    }\r\n    // Display image icon for other types\r\n    else if (fileType.includes('image/')) {\r\n        return 'far fa-file-image';\r\n    }\r\n    // Video icon\r\n    else if (fileType.includes('video/')) {\r\n        return 'far fa-file-video';\r\n    }\r\n    // Archive icon\r\n    else if (archive.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-archive';\r\n    }\r\n    // PDF icon\r\n    else if (fileType === 'application/pdf') {\r\n        return 'far fa-file-pdf';\r\n    }\r\n    // Word\r\n    else if (word.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-word';\r\n    }\r\n    // Audio icon\r\n    else if (fileType.includes('audio/')) {\r\n        return 'far fa-file-audio';\r\n    }\r\n    // Code files\r\n    else if (code.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-code';\r\n    }\r\n\r\n    return 'far fa-file';\r\n}","import Component from 'flarum/common/Component';\r\n\r\nimport Button from 'flarum/common/components/Button';\r\nimport Alert from 'flarum/common/components/Alert';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\n\r\nimport classList from 'flarum/common/utils/classList';\r\nimport extractText from 'flarum/common/utils/extractText';\r\n\r\nimport mimeToIcon from '../utils/mimeToIcon';\r\n\r\nexport default class UserFileList extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        // Load file list\r\n        app.fileListState.setUser(vnode.attrs.user || app.session.user);\r\n\r\n        this.inModal = vnode.attrs.selectable;\r\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\r\n        this.downloadOnClick = this.attrs.downloadOnClick || false;\r\n        /**\r\n         * @type {string[]} List of file UUIDs currently being hidden.\r\n         */\r\n        this.filesBeingHidden = [];\r\n\r\n        /**\r\n         * The user who's media we are dealing with\r\n         */\r\n        this.user = app.fileListState.user;\r\n\r\n        // Uploaded files\r\n        this.showFiles = this.attrs.selectedFiles;\r\n    }\r\n\r\n    view() {\r\n        /**\r\n         * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\r\n         */\r\n        const state = app.fileListState;\r\n\r\n        return (\r\n            <div className=\"fof-upload-file-list\" aria-live=\"polite\">\r\n                {/* Loading */}\r\n                {state.isLoading() && state.files.length === 0 && (\r\n                    <div className={'fof-upload-loading'}>\r\n                        {app.translator.trans('fof-upload.forum.file_list.loading')}\r\n\r\n                        <LoadingIndicator />\r\n                    </div>\r\n                )}\r\n\r\n                {/* Empty personal file list */}\r\n                {this.inModal && state.empty() && (\r\n                    <p className=\"fof-upload-empty\">\r\n                        <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\r\n\r\n                        {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\r\n                    </p>\r\n                )}\r\n\r\n                {/* Empty file list */}\r\n                {!this.inModal && state.empty() && <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>}\r\n\r\n                {/* File list */}\r\n                <ul>\r\n                    {state.files.map((file) => {\r\n                        if (!this.showFiles.includes(file.id())) return;\r\n\r\n                        const fileIcon = mimeToIcon(file.type());\r\n                        const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\r\n\r\n                        const fileClassNames = classList([\r\n                            'fof-file',\r\n                            // File is image\r\n                            fileIcon === 'image' && 'fof-file-type-image',\r\n                            // File is selected\r\n                            this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\r\n                        ]);\r\n\r\n                        /**\r\n                         * File's baseName (file name + extension)\r\n                         * @type {string}\r\n                         */\r\n                        const fileName = file.baseName();\r\n\r\n                        const isFileHiding = this.filesBeingHidden.includes(file.uuid());\r\n\r\n                        return (\r\n                            <li aria-busy={isFileHiding}>\r\n                                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\r\n                                    <Button\r\n                                        className=\"Button Button--icon fof-file-delete\"\r\n                                        icon=\"far fa-trash-alt\"\r\n                                        aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\r\n                                        disabled={isFileHiding}\r\n                                        onclick={this.hideFile.bind(this, file)}\r\n                                    />\r\n                                )}\r\n\r\n                                <button\r\n                                    className={fileClassNames}\r\n                                    onclick={() => this.onFileClick(file)}\r\n                                    disabled={!fileSelectable || isFileHiding}\r\n                                    aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\r\n                                >\r\n                                    <figure>\r\n                                        {fileIcon === 'image' ? (\r\n                                            <img\r\n                                                src={file.url()}\r\n                                                className=\"fof-file-image-preview\"\r\n                                                draggable={false}\r\n                                                // Images should always have an `alt`, even if empty!\r\n                                                //\r\n                                                // As we already state the file name as part of the\r\n                                                // button alt label, there's no point in restating it.\r\n                                                //\r\n                                                // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\r\n                                                alt=\"\"\r\n                                            />\r\n                                        ) : (\r\n                                            <span\r\n                                                className=\"fof-file-icon\"\r\n                                                // Prevents a screen-reader from traversing this node.\r\n                                                //\r\n                                                // This is a placeholder for when no preview is available,\r\n                                                // and a preview won't benefit a user using a screen\r\n                                                // reader anyway, so there is no benefit to making them\r\n                                                // aware of a lack of a preview.\r\n                                                role=\"presentation\"\r\n                                            >\r\n                                                <i className={`fa-fw ${fileIcon}`} />\r\n                                            </span>\r\n                                        )}\r\n\r\n                                        <figcaption className=\"fof-file-name\">{fileName}</figcaption>\r\n\r\n                                        {isFileHiding && (\r\n                                            <span\r\n                                                class=\"fof-file-loading\"\r\n                                                role=\"status\"\r\n                                                aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}\r\n                                            >\r\n                                                <LoadingIndicator />\r\n                                            </span>\r\n                                        )}\r\n                                    </figure>\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                {/* Load more files */}\r\n                {/* {state.hasMoreResults() && (\r\n                    <div className={'fof-load-more-files'}>\r\n                        <Button\r\n                            className={'Button Button--primary'}\r\n                            disabled={state.isLoading()}\r\n                            loading={state.isLoading()}\r\n                            onclick={() => state.loadMore()}\r\n                        >\r\n                            {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\r\n                        </Button>\r\n                    </div>\r\n                )} */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute function on file click\r\n     *\r\n     * @param {import('../../common/models/File').default} file\r\n     */\r\n    onFileClick(file) {\r\n        // Custom functionality\r\n        if (this.attrs.onFileSelect) {\r\n            this.attrs.onFileSelect(file);\r\n            return;\r\n        }\r\n\r\n        // Download on click\r\n        if (this.attrs.downloadOnClick) {\r\n            window.open(file.url());\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a file is selectable\r\n     *\r\n     * @param {import('../../common/models/File').default} file\r\n     */\r\n    isSelectable(file) {\r\n        const fileType = file.type();\r\n\r\n        // Custom defined file types\r\n        if (Array.isArray(this.restrictFileType)) {\r\n            return this.restrictFileType.indexOf(fileType) >= 0;\r\n        }\r\n\r\n        // Image\r\n        else if (this.restrictFileType === 'image') {\r\n            return fileType.includes('image/');\r\n        }\r\n\r\n        // Audio\r\n        else if (this.restrictFileType === 'audio') {\r\n            return fileType.includes('audio/');\r\n        }\r\n\r\n        // Video\r\n        else if (this.restrictFileType === 'video') {\r\n            return fileType.includes('video/');\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Begins the hiding process for a file.\r\n     *\r\n     * - Shows a native confirmation dialog\r\n     * - If confirmed, sends AJAX request to the hide file API\r\n     *\r\n     * @param {import('../../common/models/File').default} file File to hide\r\n     */\r\n    hideFile(file) {\r\n        /**\r\n         * @type {string} File UUID\r\n         */\r\n        const uuid = file.uuid();\r\n\r\n        if (this.filesBeingHidden.includes(uuid)) return;\r\n\r\n        this.filesBeingHidden.push(uuid);\r\n\r\n        const confirmHide = confirm(\r\n            extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\r\n        );\r\n\r\n        if (confirmHide) {\r\n            app.request({\r\n                method: 'PATCH',\r\n                url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\r\n                body: { uuid },\r\n            })\r\n                .then(() => {\r\n                    app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\r\n                })\r\n                .catch(() => {\r\n                    app.alerts.show(\r\n                        Alert,\r\n                        { type: 'error' },\r\n                        app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\r\n                    );\r\n                })\r\n                .then(() => {\r\n                    // Remove hidden file from state\r\n                    /**\r\n                     * @type {{ files: import('../../common/models/File').default[] }}\r\n                     */\r\n                    const state = app.fileListState;\r\n\r\n                    const index = state.files.findIndex((file) => uuid === file.uuid());\r\n                    state.files.splice(index, 1);\r\n\r\n                    // Remove file from hiding list\r\n                    const i = this.filesBeingHidden.indexOf(uuid);\r\n                    this.filesBeingHidden.splice(i, 1);\r\n                });\r\n        } else {\r\n            // Remove file from hiding list\r\n            const i = this.filesBeingHidden.indexOf(uuid);\r\n            this.filesBeingHidden.splice(i, 1);\r\n        }\r\n    }\r\n}","import { extend, override } from 'flarum/common/extend';\r\nimport Button from 'flarum/components/Button';\r\nimport UploadButton from './components/UploadButton';\r\nimport DropZone from './components/DropZone';\r\nimport app from 'flarum/app';\r\n\r\napp.initializers.add('block-cat/digi-media-manager', () => {\r\n  extend(require('@fof-upload').components.FileManagerModal.prototype, 'oninit', function() {\r\n    app.forum.data.attributes.userFileListVisibility = false;\r\n  });\r\n\r\n\r\n  override(require('@fof-upload').components.FileManagerModal.prototype, 'view', function(original) {\r\n    return (\r\n      <div className={`Modal modal-dialog ${this.className()}`}>\r\n          <div className=\"Modal-content\">\r\n              <div className=\"fof-modal-buttons App-backControl\">\r\n                  <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\r\n              </div>\r\n\r\n              <div className=\"fof-drag-and-drop\">\r\n                  <div className=\"fof-drag-and-drop-release\">\r\n                      <i className=\"fas fa-cloud-upload-alt\" />\r\n\r\n                      {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"Modal-header\">\r\n                  <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\r\n              </div>\r\n          \r\n              {this.alertAttrs && (\r\n                  <div className=\"Modal-alert\">\r\n                      <Alert {...this.alertAttrs} />\r\n                  </div>\r\n              )}\r\n\r\n              <div className=\"Modal-body\">\r\n                {(app.forum.attribute('userFileListVisibility')) ?\r\n                require('@fof-upload').components.UserFileList.component({\r\n                  user: this.attrs.user,\r\n                  selectable: true,\r\n                  onFileSelect: this.onFileSelect.bind(this),\r\n                  selectedFiles: this.selectedFiles,\r\n                  restrictFileType: this.restrictFileType\r\n                }) : \r\n                  DropZone.component({\r\n                    user: this.attrs.user,\r\n                    onFileSelect: this.onFileSelect.bind(this),\r\n                    selectedFiles: this.selectedFiles,\r\n                    restrictFileType: this.restrictFileType,\r\n                    onSelect: this.onSelect.bind(this)\r\n                  })\r\n                }\r\n              </div>\r\n\r\n              <div className=\"Modal-footer\">\r\n                {\r\n                  (app.forum.attribute('userFileListVisibility')) ?\r\n                  Button.component({\r\n                    id: \"currentFilesButton\",\r\n                    onclick: this.showAllFiles.bind(this),\r\n                    className: \"Button Button--primary\",\r\n                  },\r\n                  app.translator.trans('digi-media-manager.forum.current_files')\r\n                  ) :\r\n                  Button.component({\r\n                    id: \"allFilesButton\",\r\n                    onclick: this.showAllFiles.bind(this),\r\n                    className: \"Button Button--secundary\",\r\n                  },\r\n                  app.translator.trans('digi-media-manager.forum.all_files')\r\n                  )\r\n                }\r\n\r\n                <Button onclick={this.hide.bind(this)} className=\"Button\">\r\n                    {app.translator.trans('fof-upload.forum.buttons.cancel')}\r\n                </Button>\r\n\r\n                <Button\r\n                    onclick={this.onSelect.bind(this)}\r\n                    disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\r\n                    className=\"Button Button--primary\"\r\n                >\r\n                    {app.translator.transChoice('fof-upload.forum.file_list.confirm_selection_btn', this.selectedFiles.length)}\r\n                </Button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  require('@fof-upload').components.FileManagerModal.prototype.showAllFiles =  () => {\r\n    app.forum.data.attributes.userFileListVisibility ^= true;\r\n  }\r\n});"],"sourceRoot":""}