{"version":3,"sources":["webpack://@block-cat/digi-media-manager/webpack/bootstrap","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['app']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/app']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/Button']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/Component']\"","webpack://@block-cat/digi-media-manager/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@block-cat/digi-media-manager/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['components/Button']\"","webpack://@block-cat/digi-media-manager/external \"flarum.extensions['fof-upload']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/utils/classList']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/extend']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/components/Alert']\"","webpack://@block-cat/digi-media-manager/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@block-cat/digi-media-manager/./src/forum/components/DropZone.js","webpack://@block-cat/digi-media-manager/./src/forum/utils/mimeToIcon.js","webpack://@block-cat/digi-media-manager/./src/forum/components/UserFileList.js","webpack://@block-cat/digi-media-manager/./src/forum/components/UploadButton.js","webpack://@block-cat/digi-media-manager/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","extensions","DropZone","oninit","vnode","this","uploaded","enable","loading","content","files","contor","view","attrs","selectedFiles","length","app","fileListState","map","file","includes","id","type","className","src","UserFileList","component","user","selectable","onFileSelect","restrictFileType","Button","onclick","transliterate","disabled","translator","trans","saveText","class","params","document","getElementsByClassName","style","display","eval","request","method","url","forum","attribute","then","data","redraw","error","console","log","Component","image","archive","code","word","setUser","session","inModal","downloadOnClick","filesBeingHidden","showFiles","state","aria-live","isLoading","empty","screen","fileType","fileIcon","indexOf","fileSelectable","isSelectable","fileClassNames","classList","fileName","baseName","isFileHiding","uuid","aria-busy","deleteOthersMediaLibrary","icon","aria-label","hideFile","onFileClick","extractText","draggable","alt","role","window","open","Array","isArray","push","confirm","body","alerts","show","Alert","index","findIndex","splice","UploadButton","uploader","on","$","reset","isMediaUploadButton","oncreate","tooltip","buttonText","uploading","uploadButtonClicked","title","size","multiple","onchange","process","e","prop","upload","click","initializers","add","extend","require","components","FileManagerModal","attributes","userFileListVisibility","override","FileManagerButton","original","fileManagerButtonClicked","alertAttrs","showAllFiles","hide","onSelect","multiSelect","transChoice"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.extensions['fof-upload'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/common/app';\r\nimport Component from 'flarum/common/Component';\r\nimport UserFileList from './UserFileList';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default class DropZone extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        this.uploaded = false;\r\n        this.enable = false;\r\n        this.loading = false;\r\n        this.content = '';\r\n        this.files = '';\r\n\r\n        this.contor = 0;\r\n    }\r\n\r\n    view() {\r\n        // console.log(app);\r\n        if (this.attrs.selectedFiles.length != 0) {\r\n            this.uploaded = true;\r\n        } else {\r\n            this.uploaded = false;\r\n        }\r\n\r\n        app.fileListState.files.map((file) => {\r\n            if (!this.attrs.selectedFiles.includes(file.id())) return;\r\n\r\n            if (file.type().includes('image/') || file.type() === 'application/pdf') {\r\n                this.contor++;\r\n            }\r\n\r\n            if (this.contor != 0) {\r\n                this.enable = true;\r\n            } else {\r\n                this.enable = false;\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div >\r\n                <div className=\"div_loading\">\r\n                    <img src=\"https://digi.emoldova.org/assets/files/2021-04-29/1619697698-204093-cyr-ocr-animation.gif\" />\r\n                </div>\r\n                <div className='NoDropZone'>\r\n                    {\r\n                        this.uploaded &&\r\n                        (UserFileList.component({\r\n                            user: this.attrs.user,\r\n                            selectable: true,\r\n                            onFileSelect: this.attrs.onFileSelect.bind(this),\r\n                            selectedFiles: this.attrs.selectedFiles,\r\n                            restrictFileType: this.attrs.restrictFileType\r\n                        }))\r\n                    }\r\n                    {\r\n                        this.uploaded && (\r\n                            <div className='UserFileList-buttons'>\r\n                                {Button.component({\r\n                                    className: \"Button Button--primary button_transliterare\",\r\n                                    onclick: this.transliterate.bind(this),\r\n                                    disabled: !this.enable,\r\n                                    loading: this.loading\r\n                                },\r\n                                    app.translator.trans('Transliterare')\r\n                                )}\r\n                                {(this.files !== '') ?\r\n                                    Button.component({\r\n                                        className: \"Button Button--primary button_transliterare\",\r\n                                        onclick: this.saveText.bind(this),\r\n                                    },\r\n                                        app.translator.trans('Arata')\r\n                                    ) : ''}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n\r\n                {!this.uploaded &&\r\n                    (<div className=\"dropzone\">\r\n                        <div class=\"icon-container\">\r\n                            <i class=\"far fa-file-image fa-4x\"></i>\r\n                            <i class=\"far fa-file-pdf fa-4x\"></i>\r\n                            <i class=\"far fa-file-alt fa-4x\"></i>\r\n                        </div>\r\n                        <h1>{app.translator.trans('digi-media-manager.forum.dropzone.title')}</h1>\r\n                        <p>{app.translator.trans('digi-media-manager.forum.dropzone.subtitle')}</p>\r\n                    </div>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    transliterate() {\r\n        this.loading = true;\r\n        let params = {};\r\n\r\n        document.getElementsByClassName(\"div_loading\")[0].style.display = \"block\";\r\n\r\n        app.fileListState.files.map((file) => {\r\n            if (!this.attrs.selectedFiles.includes(file.id())) return;\r\n\r\n            if (file.type().includes('image/') || file.type() === 'application/pdf') {\r\n                eval(`params.id_${file.id()} = ${file.id()}`);\r\n            }\r\n        });\r\n\r\n        return app\r\n            .request({\r\n                method: 'GET',\r\n                url: app.forum.attribute('apiUrl') + '/trans-texts',\r\n                params: params,\r\n            })\r\n            .then((data) => {\r\n                this.files = data.data;\r\n                this.loading = false;\r\n                document.getElementsByClassName(\"div_loading\")[0].style.display = \"none\";\r\n                m.redraw();\r\n            })\r\n            .catch((error) => {\r\n                this.loading = false;\r\n                document.getElementsByClassName(\"div_loading\")[0].style.display = \"none\";\r\n                m.redraw();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    saveText() {\r\n        console.log(this.files);\r\n    }\r\n}","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\r\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\r\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\r\nconst word = [\r\n    'application/x-abiword',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/pdf',\r\n];\r\n\r\n/**\r\n * Returns a FontAwesome icon class for a specified MIME type.\r\n *\r\n * If it's a known image type, it returns `image` instead.\r\n *\r\n * @param {string} fileType MIME type\r\n * @returns {string} Icon for MIME type\r\n */\r\nexport default function mimeToIcon(fileType) {\r\n    // Display image (do not display for)\r\n    if (image.includes(fileType)) {\r\n        return 'image';\r\n    }\r\n    // Display image icon for other types\r\n    else if (fileType.includes('image/')) {\r\n        return 'far fa-file-image';\r\n    }\r\n    // Video icon\r\n    else if (fileType.includes('video/')) {\r\n        return 'far fa-file-video';\r\n    }\r\n    // Archive icon\r\n    else if (archive.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-archive';\r\n    }\r\n    // PDF icon\r\n    else if (fileType === 'application/pdf') {\r\n        return 'far fa-file-pdf';\r\n    }\r\n    // Word\r\n    else if (word.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-word';\r\n    }\r\n    // Audio icon\r\n    else if (fileType.includes('audio/')) {\r\n        return 'far fa-file-audio';\r\n    }\r\n    // Code files\r\n    else if (code.indexOf(fileType) >= 0) {\r\n        return 'far fa-file-code';\r\n    }\r\n\r\n    return 'far fa-file';\r\n}","import Component from 'flarum/common/Component';\r\n\r\nimport Button from 'flarum/common/components/Button';\r\nimport Alert from 'flarum/common/components/Alert';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\n\r\nimport classList from 'flarum/common/utils/classList';\r\nimport extractText from 'flarum/common/utils/extractText';\r\n\r\nimport mimeToIcon from '../utils/mimeToIcon';\r\n\r\nexport default class UserFileList extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        // Load file list\r\n        app.fileListState.setUser(vnode.attrs.user || app.session.user);\r\n\r\n        this.inModal = vnode.attrs.selectable;\r\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\r\n        this.downloadOnClick = this.attrs.downloadOnClick || false;\r\n        /**\r\n         * @type {string[]} List of file UUIDs currently being hidden.\r\n         */\r\n        this.filesBeingHidden = [];\r\n\r\n        /**\r\n         * The user who's media we are dealing with\r\n         */\r\n        this.user = app.fileListState.user;\r\n\r\n        // Uploaded files\r\n        this.showFiles = this.attrs.selectedFiles;\r\n    }\r\n\r\n    view() {\r\n        /**\r\n         * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\r\n         */\r\n        const state = app.fileListState;\r\n\r\n        return (\r\n            <div className=\"fof-upload-file-list\" aria-live=\"polite\">\r\n                {/* Loading */}\r\n                {state.isLoading() && state.files.length === 0 && (\r\n                    <div className={'fof-upload-loading'}>\r\n                        {app.translator.trans('fof-upload.forum.file_list.loading')}\r\n\r\n                        <LoadingIndicator />\r\n                    </div>\r\n                )}\r\n\r\n                {/* Empty personal file list */}\r\n                {this.inModal && state.empty() && (\r\n                    <p className=\"fof-upload-empty\">\r\n                        <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\r\n\r\n                        {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\r\n                    </p>\r\n                )}\r\n\r\n                {/* Empty file list */}\r\n                {!this.inModal && state.empty() && <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>}\r\n\r\n                {/* File list */}\r\n                <ul>\r\n                    {state.files.map((file) => {\r\n                        if (!this.showFiles.includes(file.id())) return;\r\n\r\n                        const fileIcon = mimeToIcon(file.type());\r\n                        const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\r\n\r\n                        const fileClassNames = classList([\r\n                            'fof-file',\r\n                            // File is image\r\n                            fileIcon === 'image' && 'fof-file-type-image',\r\n                            // File is selected\r\n                            this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\r\n                        ]);\r\n\r\n                        /**\r\n                         * File's baseName (file name + extension)\r\n                         * @type {string}\r\n                         */\r\n                        const fileName = file.baseName();\r\n\r\n                        const isFileHiding = this.filesBeingHidden.includes(file.uuid());\r\n\r\n                        return (\r\n                            <li aria-busy={isFileHiding}>\r\n                                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\r\n                                    <Button\r\n                                        className=\"Button Button--icon fof-file-delete\"\r\n                                        icon=\"far fa-trash-alt\"\r\n                                        aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\r\n                                        disabled={isFileHiding}\r\n                                        onclick={this.hideFile.bind(this, file)}\r\n                                    />\r\n                                )}\r\n\r\n                                <button\r\n                                    className={fileClassNames}\r\n                                    onclick={() => this.onFileClick(file)}\r\n                                    disabled={!fileSelectable || isFileHiding}\r\n                                    aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\r\n                                >\r\n                                    <figure>\r\n                                        {fileIcon === 'image' ? (\r\n                                            <img\r\n                                                src={file.url()}\r\n                                                className=\"fof-file-image-preview\"\r\n                                                draggable={false}\r\n                                                // Images should always have an `alt`, even if empty!\r\n                                                //\r\n                                                // As we already state the file name as part of the\r\n                                                // button alt label, there's no point in restating it.\r\n                                                //\r\n                                                // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\r\n                                                alt=\"\"\r\n                                            />\r\n                                        ) : (\r\n                                            <span\r\n                                                className=\"fof-file-icon\"\r\n                                                // Prevents a screen-reader from traversing this node.\r\n                                                //\r\n                                                // This is a placeholder for when no preview is available,\r\n                                                // and a preview won't benefit a user using a screen\r\n                                                // reader anyway, so there is no benefit to making them\r\n                                                // aware of a lack of a preview.\r\n                                                role=\"presentation\"\r\n                                            >\r\n                                                <i className={`fa-fw ${fileIcon}`} />\r\n                                            </span>\r\n                                        )}\r\n\r\n                                        <figcaption className=\"fof-file-name\">{fileName}</figcaption>\r\n\r\n                                        {isFileHiding && (\r\n                                            <span\r\n                                                class=\"fof-file-loading\"\r\n                                                role=\"status\"\r\n                                                aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}\r\n                                            >\r\n                                                <LoadingIndicator />\r\n                                            </span>\r\n                                        )}\r\n                                    </figure>\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                {/* Load more files */}\r\n                {/* {state.hasMoreResults() && (\r\n                    <div className={'fof-load-more-files'}>\r\n                        <Button\r\n                            className={'Button Button--primary'}\r\n                            disabled={state.isLoading()}\r\n                            loading={state.isLoading()}\r\n                            onclick={() => state.loadMore()}\r\n                        >\r\n                            {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\r\n                        </Button>\r\n                    </div>\r\n                )} */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute function on file click\r\n     *\r\n     * @param {import('../../common/models/File').default} file\r\n     */\r\n    onFileClick(file) {\r\n        // Custom functionality\r\n        if (this.attrs.onFileSelect) {\r\n            this.attrs.onFileSelect(file);\r\n            return;\r\n        }\r\n\r\n        // Download on click\r\n        if (this.attrs.downloadOnClick) {\r\n            window.open(file.url());\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a file is selectable\r\n     *\r\n     * @param {import('../../common/models/File').default} file\r\n     */\r\n    isSelectable(file) {\r\n        const fileType = file.type();\r\n\r\n        // Custom defined file types\r\n        if (Array.isArray(this.restrictFileType)) {\r\n            return this.restrictFileType.indexOf(fileType) >= 0;\r\n        }\r\n\r\n        // Image\r\n        else if (this.restrictFileType === 'image') {\r\n            return fileType.includes('image/');\r\n        }\r\n\r\n        // Audio\r\n        else if (this.restrictFileType === 'audio') {\r\n            return fileType.includes('audio/');\r\n        }\r\n\r\n        // Video\r\n        else if (this.restrictFileType === 'video') {\r\n            return fileType.includes('video/');\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Begins the hiding process for a file.\r\n     *\r\n     * - Shows a native confirmation dialog\r\n     * - If confirmed, sends AJAX request to the hide file API\r\n     *\r\n     * @param {import('../../common/models/File').default} file File to hide\r\n     */\r\n    hideFile(file) {\r\n        /**\r\n         * @type {string} File UUID\r\n         */\r\n        const uuid = file.uuid();\r\n\r\n        if (this.filesBeingHidden.includes(uuid)) return;\r\n\r\n        this.filesBeingHidden.push(uuid);\r\n\r\n        const confirmHide = confirm(\r\n            extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\r\n        );\r\n\r\n        if (confirmHide) {\r\n            app.request({\r\n                method: 'PATCH',\r\n                url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\r\n                body: { uuid },\r\n            })\r\n                .then(() => {\r\n                    app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\r\n                })\r\n                .catch(() => {\r\n                    app.alerts.show(\r\n                        Alert,\r\n                        { type: 'error' },\r\n                        app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\r\n                    );\r\n                })\r\n                .then(() => {\r\n                    // Remove hidden file from state\r\n                    /**\r\n                     * @type {{ files: import('../../common/models/File').default[] }}\r\n                     */\r\n                    const state = app.fileListState;\r\n\r\n                    const index = state.files.findIndex((file) => uuid === file.uuid());\r\n                    state.files.splice(index, 1);\r\n\r\n                    // Remove file from hiding list\r\n                    const i = this.filesBeingHidden.indexOf(uuid);\r\n                    this.filesBeingHidden.splice(i, 1);\r\n                });\r\n        } else {\r\n            // Remove file from hiding list\r\n            const i = this.filesBeingHidden.indexOf(uuid);\r\n            this.filesBeingHidden.splice(i, 1);\r\n        }\r\n    }\r\n}","import app from 'flarum/common/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport classList from 'flarum/common/utils/classList';\r\n\r\nexport default class UploadButton extends Component {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        this.attrs.uploader.on('uploaded', () => {\r\n            // reset the button for a new upload\r\n            this.$('form')[0].reset();\r\n\r\n            // redraw to reflect uploader.loading in the DOM\r\n            m.redraw();\r\n        });\r\n\r\n        this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\r\n    }\r\n\r\n    oncreate(vnode) {\r\n        super.oncreate(vnode);\r\n\r\n        // Add tooltip\r\n        if (!this.isMediaUploadButton) {\r\n            this.$().tooltip();\r\n        }\r\n    }\r\n\r\n    view() {\r\n        const buttonText = this.attrs.uploader.uploading\r\n            ? app.translator.trans('fof-upload.forum.states.loading')\r\n            : app.translator.trans('fof-upload.forum.buttons.upload');\r\n\r\n        /**\r\n         * Flarum core has decided that all buttons should have tooltips, but\r\n         * it uses `extractText` to get a title attr when none is provided.\r\n         *\r\n         * That returns `false` when no text is available, like the icon in a\r\n         * button.\r\n         *\r\n         * This means that it starts creating weird tooltips, such as `falsefalse`\r\n         * and `falseUpload`.\r\n         *\r\n         * To override this behaviour, we pass `\" \"` when no tooltip is desired.\r\n         * Using `\"\"` won't work as JS interprets this as a falsey value which will\r\n         * trigger the core logic.\r\n         *\r\n         * Thankfully, browsers ignore title attributes made of only whitespace,\r\n         * preventing a ghost-like tooltip.\r\n         */\r\n        const tooltip = (!this.isMediaUploadButton && buttonText) || ' ';\r\n\r\n        return (\r\n            <Button\r\n                className={classList([\r\n                    'Button',\r\n                    'hasIcon',\r\n                    'fof-upload-button',\r\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\r\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\r\n                    this.attrs.uploader.uploading && 'uploading',\r\n                ])}\r\n                icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\r\n                onclick={this.uploadButtonClicked.bind(this)}\r\n                title={tooltip}\r\n                disabled={this.attrs.disabled}\r\n            >\r\n                {this.attrs.uploader.uploading && <LoadingIndicator size=\"tiny\" className=\"LoadingIndicator--inline Button-icon\" />}\r\n                {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\r\n                <form>\r\n                    <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\r\n                </form>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Process the upload event.\r\n     *\r\n     * @param e\r\n     */\r\n    process(e) {\r\n        // get the file from the input field\r\n        const files = this.$('input').prop('files');\r\n\r\n        if (files.length === 0) {\r\n            // We've got no files to upload, so trying\r\n            // to begin an upload will show an error\r\n            // to the user.\r\n            return;\r\n        }\r\n\r\n        this.attrs.uploader.upload(files, !this.isMediaUploadButton);\r\n    }\r\n\r\n    /**\r\n     * Event handler for upload button being clicked\r\n     *\r\n     * @param {PointerEvent} e\r\n     */\r\n    uploadButtonClicked(e) {\r\n        // Trigger click on hidden input element\r\n        // (Opens file dialog)\r\n        this.$('input').click();\r\n    }\r\n}","import { extend, override } from 'flarum/common/extend';\r\nimport Button from 'flarum/components/Button';\r\nimport UploadButton from './components/UploadButton';\r\nimport DropZone from './components/DropZone';\r\nimport app from 'flarum/app';\r\n\r\napp.initializers.add('block-cat/digi-media-manager', () => {\r\n  extend(require('@fof-upload').components.FileManagerModal.prototype, 'oninit', function() {\r\n    app.forum.data.attributes.userFileListVisibility = false;\r\n  });\r\n\r\n  override(require('@fof-upload').components.FileManagerButton.prototype, 'view', function(original) {\r\n    return Button.component({\r\n      className: 'Button fof-upload-button Button--icon',\r\n      onclick: this.fileManagerButtonClicked.bind(this),\r\n      icon: 'fas fa-folder-open',\r\n      title: app.translator.trans('fof-upload.forum.buttons.media'),\r\n    });\r\n  });\r\n\r\n  override(require('@fof-upload').components.FileManagerModal.prototype, 'view', function(original) {\r\n    return (\r\n      <div className={`Modal modal-dialog ${this.className()}`}>\r\n          <div className=\"Modal-content\">\r\n              <div className=\"fof-modal-buttons App-backControl\">\r\n                  <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\r\n              </div>\r\n\r\n              <div className=\"fof-drag-and-drop\">\r\n                  <div className=\"fof-drag-and-drop-release\">\r\n                      <i className=\"fas fa-cloud-upload-alt\" />\r\n\r\n                      {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"Modal-header\">\r\n                  <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\r\n              </div>\r\n          \r\n              {this.alertAttrs && (\r\n                  <div className=\"Modal-alert\">\r\n                      <Alert {...this.alertAttrs} />\r\n                  </div>\r\n              )}\r\n\r\n              <div className=\"Modal-body\">\r\n                {(app.forum.attribute('userFileListVisibility')) ?\r\n                require('@fof-upload').components.UserFileList.component({\r\n                  user: this.attrs.user,\r\n                  selectable: true,\r\n                  onFileSelect: this.onFileSelect.bind(this),\r\n                  selectedFiles: this.selectedFiles,\r\n                  restrictFileType: this.restrictFileType\r\n                }) : \r\n                  DropZone.component({\r\n                    user: this.attrs.user,\r\n                    onFileSelect: this.onFileSelect.bind(this),\r\n                    selectedFiles: this.selectedFiles,\r\n                    restrictFileType: this.restrictFileType\r\n                  })\r\n                }\r\n              </div>\r\n\r\n              <div className=\"Modal-footer\">\r\n                {\r\n                  (app.forum.attribute('userFileListVisibility')) ?\r\n                  Button.component({\r\n                    id: \"currentFilesButton\",\r\n                    onclick: this.showAllFiles.bind(this),\r\n                    className: \"Button Button--primary\",\r\n                  },\r\n                  app.translator.trans('digi-media-manager.forum.current_files')\r\n                  ) :\r\n                  Button.component({\r\n                    id: \"allFilesButton\",\r\n                    onclick: this.showAllFiles.bind(this),\r\n                    className: \"Button Button--secundary\",\r\n                  },\r\n                  app.translator.trans('digi-media-manager.forum.all_files')\r\n                  )\r\n                }\r\n\r\n                <Button onclick={this.hide.bind(this)} className=\"Button\">\r\n                    {app.translator.trans('fof-upload.forum.buttons.cancel')}\r\n                </Button>\r\n\r\n                <Button\r\n                    onclick={this.onSelect.bind(this)}\r\n                    disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\r\n                    className=\"Button Button--primary\"\r\n                >\r\n                    {app.translator.transChoice('fof-upload.forum.file_list.confirm_selection_btn', this.selectedFiles.length)}\r\n                </Button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  require('@fof-upload').components.FileManagerModal.prototype.showAllFiles =  () => {\r\n    app.forum.data.attributes.userFileListVisibility ^= true;\r\n  }\r\n});"],"sourceRoot":""}